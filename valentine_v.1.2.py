import tkinter as tk
import random
import time
import threading
import os
import sys
import winreg as reg
import pygetwindow as gw
import screeninfo
import locale
from datetime import datetime, timedelta

# üìå –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª—å
locale.setlocale(locale.LC_ALL, 'ru_RU.UTF-8')

# üìå –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
screen = screeninfo.get_monitors()[0]  # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä
SCREEN_WIDTH = screen.width
SCREEN_HEIGHT = screen.height

BG_COLOR = "white"  # –¶–≤–µ—Ç —Ñ–æ–Ω–∞
EXIT_BUTTON = ('q', '–π')    # –ö–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã

FLOWER_NUMBER = 12    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —Ü–≤–µ—Ç–∫–æ–≤
MAX_FLOWER_SIZE = 100    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ü–≤–µ—Ç–∫–æ–≤
FLOWER_COLORS = [
    "#FFC0CB",  # —Å–≤–µ—Ç–ª–æ-—Ä–æ–∑–æ–≤—ã–π
    "#8A2BE2",  # —Å–∏–Ω–∏–π —Å —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º –æ—Ç—Ç–µ–Ω–∫–æ–º
    "#9400D3",  # —Ç–µ–º–Ω–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    "#FFD700",  # –∑–æ–ª–æ—Ç–æ–π
    "#00FFFF",  # –±–∏—Ä—é–∑–æ–≤—ã–π
    "#FFB6C1",  # –æ—á–µ–Ω—å —Å–≤–µ—Ç–ª—ã–π —Ä–æ–∑–æ–≤—ã–π
    "#4B0082",  # –∏–Ω–¥–∏–≥–æ
    "#C71585",  # —è—Ä–∫–∏–π –ø—É—Ä–ø—É—Ä–Ω—ã–π
    "#FF8C00",  # –æ—Ä–∞–Ω–∂–µ–≤—ã–π
    "#9932CC",  # —Ç–µ–º–Ω—ã–π —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
    "#FF6347",  # —Ç–æ–º–∞—Ç–Ω—ã–π –∫—Ä–∞—Å–Ω—ã–π
    "#DA70D6",  # –æ—Ä—Ö–∏–¥–µ—è
    "#D2691E",  # —à–æ–∫–æ–ª–∞–¥–Ω—ã–π
    "#B22222",  # –æ–≥–Ω–µ–Ω–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π
    "#FFDAB9",  # –ø–µ—Ä—Å–∏–∫–æ–≤—ã–π
    "#ADFF2F",  # –∂–µ–ª—Ç–æ-–∑–µ–ª–µ–Ω—ã–π (–ª–∞–π–º–æ–≤—ã–π)
    "#48D1CC",  # —Å—Ä–µ–¥–Ω–∏–π –±–∏—Ä—é–∑–æ–≤—ã–π
    "#C0C0C0",  # —Å–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π
    "#800080",  # –ø—É—Ä–ø—É—Ä–Ω—ã–π
    "#FA8072",  # —Å–≤–µ—Ç–ª–æ-—Ç–æ–º–∞—Ç–æ–≤–æ–µ
    "#2E8B57",  # –º–æ—Ä—Å–∫–∞—è –≤–æ–ª–Ω–∞
    "#993366",  # –±–æ—Ä–¥–æ–≤—ã–π —Å —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º –æ—Ç—Ç–µ–Ω–∫–æ–º
    "#20B2AA",  # —Å–≤–µ—Ç–ª—ã–π –º–æ—Ä—Å–∫–æ–π –∑–µ–ª–µ–Ω—ã–π
    "#D3D3D3",  # —Å–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π
    "#00BFFF",  # –≥–ª—É–±–æ–∫–∏–π –≥–æ–ª—É–±–æ–π
    "#FF1493",  # —è—Ä–∫–∏–π —Ä–æ–∑–æ–≤—ã–π (–∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —Ü–≤–µ—Ç)
]  # –¶–≤–µ—Ç–∞ —Ü–≤–µ—Ç–∫–æ–≤

TEXT_FONT = "Arial"  # –®—Ä–∏—Ñ—Ç
TEXT = f"–° {datetime.fromtimestamp(time.time()).strftime("%d %B")}, {os.getlogin()}!"    # –ù–∞–¥–ø–∏—Å—å

# üìå –°–ª–æ–≤–∞—Ä—å —Å –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏
programs = {
    "Outlook": {"window_keyword": "Outlook", "process_name": "OUTLOOK.EXE"},
    "Telegram": {"window_keyword": "Telegram", "process_name": "Telegram.exe"},
}

# üîÑ –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
selected_program = "Outlook"

# üìÖ –î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
launch_date = datetime(datetime.now().year, 3, 8)  # –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é –¥–∞—Ç—É

# üìÖ –í—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
close_time = {"hour": 23, "minute": 0}

# üìå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–æ—á–∫–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
max_flowers = 80

# üöÄ –§–ª–∞–≥ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
exit_flag = False

# üìå –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É
def add_to_autostart():
    script_path = os.path.abspath(sys.argv[0])
    script_name = os.path.basename(script_path)
    key = r"Software\Microsoft\Windows\CurrentVersion\Run"

    try:
        with reg.OpenKey(reg.HKEY_CURRENT_USER, key, 0, reg.KEY_WRITE) as reg_key:
            reg.SetValueEx(reg_key, script_name, 0, reg.REG_SZ, script_path)
            print(f"–ü—Ä–æ–≥—Ä–∞–º–º–∞ {script_name} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É: {e}")

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏
def check_autostart():
    script_name = os.path.basename(sys.argv[0])
    key = r"Software\Microsoft\Windows\CurrentVersion\Run"

    try:
        with reg.OpenKey(reg.HKEY_CURRENT_USER, key, 0, reg.KEY_READ) as reg_key:
            try:
                reg.QueryValueEx(reg_key, script_name)
            except FileNotFoundError:
                add_to_autostart()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")

# ‚úÖ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–∞
def is_program_running(process_name):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º."""
    output = os.popen(f'tasklist | findstr /I "{process_name}"').read()
    return process_name.lower() in output.lower()  # True, –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞–π–¥–µ–Ω

# üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–∞
def close_selected_program():
    """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ–∫–æ–Ω."""
    program_data = programs[selected_program]  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    program_keyword = program_data["window_keyword"]
    process_name = program_data["process_name"]

    # üìå –§—É–Ω–∫—Ü–∏—è —Å–∏–ª–æ–≤–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–∏–≥–≥–µ—Ä–∞
    def force_close_program(process_name):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —á–µ—Ä–µ–∑ taskkill."""
        print(f"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ {selected_program}...")
        os.system(f'wmic process where name="{process_name}" call terminate')

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ–∫–æ–Ω
    all_windows = gw.getAllTitles()
    target_windows = [win for win in all_windows if program_keyword.lower() in win.lower()]

    if target_windows:
        # print(f"{selected_program} –Ω–∞–π–¥–µ–Ω. –ó–∞–∫—Ä—ã–≤–∞—é...")

        for win in target_windows:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –æ–∫–Ω–∞ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
                win_obj = gw.getWindowsWithTitle(win)[0]
                win_obj.close()
                print(f"–ó–∞–∫—Ä—ã—Ç–æ –æ–∫–Ω–æ: {win}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ {win}: {e}")
    else:
        print(f"–û–∫–Ω–æ {selected_program} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        # –ï—Å–ª–∏ –æ–∫–Ω–∞ –Ω–µ—Ç, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
        if is_program_running(process_name):
            print(f"{selected_program} —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ. –ó–∞–≤–µ—Ä—à–∞—é –ø—Ä–æ—Ü–µ—Å—Å...")
            force_close_program(process_name)
        else:
            print(f"{selected_program} –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.")

# üíê –§—É–Ω–∫—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ü–≤–µ—Ç–æ—á–∫–æ–≤ –∏ —Ç–µ–∫—Å—Ç–∞
def create_flowerst():
    root = tk.Tk()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    root.title(TEXT)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
    root.geometry(f"{SCREEN_WIDTH}x{SCREEN_HEIGHT}")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞
    root.configure(bg=BG_COLOR)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω
    root.wm_attributes("-transparentcolor", BG_COLOR)  # –£–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç –∫–∞–∫ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π
    root.attributes("-topmost", True)  # –î–µ–ª–∞–µ–º –æ–∫–Ω–æ –≤—Å–µ–≥–¥–∞ –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö –æ–∫–æ–Ω
    # root.overrideredirect(True)  # –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è, —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∏ —Ä–∞–º–∫—É –æ–∫–Ω–∞

    # –°–æ–∑–¥–∞–µ–º —Ö–æ–ª—Å—Ç –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
    canvas = tk.Canvas(root, width=SCREEN_WIDTH, height=SCREEN_HEIGHT, bg=BG_COLOR, highlightthickness=0)
    canvas.pack()

    flowers = []

    def create_flower():
        """
            –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Ü–≤–µ—Ç–æ—á–µ–∫ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Å —Å–ª—É—á–∞–π–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –∏ —Ü–≤–µ—Ç–æ–º,
            –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏.
            """
        # flower_symbols = ["üå∏", "üå∫", "üåª", "üåº", "üå∑", "üåπ"]  # –°–ø–∏—Å–æ–∫ —Ü–≤–µ—Ç–æ—á–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        flower_symbols = ["üå∏", "üå∑", "üåª"]  # –°–ø–∏—Å–æ–∫ —Ü–≤–µ—Ç–æ—á–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        x = random.randint(50, SCREEN_WIDTH - 50)    # –°–ª—É—á–∞–π–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–∫–Ω–∞
        y = random.randint(50, SCREEN_HEIGHT - 50)    # –°–ª—É—á–∞–π–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ–∫–Ω–∞
        color = random.choice(FLOWER_COLORS)
        flower_size = random.randint(30, MAX_FLOWER_SIZE)  # –°–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–µ—Ä–¥—Ü–∞

        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç–æ–∫
        flower = canvas.create_text(x, y, text=random.choice(flower_symbols), font=(TEXT_FONT, flower_size), fill=color)
        # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ—á–µ–∫ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        # x, y - —Ç–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        flowers.append((flower, x, y, random.uniform(-3, 3), random.uniform(-1, -3)))

    def adjust_flowers():
        """
            –£–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ü–≤–µ—Ç–æ—á–∫–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ:
            1. –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ü–≤–µ—Ç–æ—á–∫–∏, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ 50.
            2. –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ü–≤–µ—Ç–æ—á–∫–∏.
            3. –ó–∞–ø—É—Å–∫–∞–µ—Ç —ç—Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 500 –º—Å.
            """
        while len(flowers) > max_flowers:
            flower, *_ = flowers.pop(0)   # –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ
            canvas.delete(flower)

        for _ in range(FLOWER_NUMBER):  # –°–æ–∑–¥–∞–µ–º FLOWER_NUMBER –Ω–æ–≤—ã—Ö —Å–µ—Ä–¥–µ—Ü –∑–∞ —Ä–∞–∑
            create_flower()

        root.after(2000, adjust_flowers)  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 500 –º—Å

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –æ–∫–Ω–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
    root.focus_set()  # –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –ø–æ–º–æ—á—å –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–ª—É—á–∞—Ç—å –∫–ª–∞–≤–∏—à–∏

    # üìå –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "q"/"–π"
    def on_key(event):
        if event.char.lower() in EXIT_BUTTON:
            root.quit()     # –ó–∞–≤–µ—Ä—à–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª tkinter
            sys.exit(0)  # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –æ–∫–Ω—É
    root.bind("<Key>", on_key)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ü–≤–µ—Ç–∫–æ–≤
    adjust_flowers()
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    root.mainloop()

# üî• –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
def start_valentine():

    while not exit_flag:
        current_time = datetime.now()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–µ–π—á–∞—Å –≤—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è (–∑–∞ –¥–µ–Ω—å –¥–æ —Å–æ–±—ã—Ç–∏—è)
        one_day_before = launch_date - timedelta(days=1)
        if (current_time.date() == one_day_before.date()
                and current_time.hour == close_time["hour"]
                and current_time.minute == close_time["minute"]):
            print(f"{close_time['hour']}:{close_time['minute']}. –ü—Ä–æ–≤–µ—Ä—è—é {selected_program}...")
            close_selected_program()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        if (current_time.date() == launch_date.date()
                and is_program_running(programs[selected_program]['process_name'])):
            print(f"–°–µ–≥–æ–¥–Ω—è {launch_date.strftime('%d %B')}. –ó–∞–ø—É—Å–∫–∞—é —Ü–≤–µ—Ç–æ—á–∫–∏!")
            create_flowerst()
            break  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–∏–∫–ª –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏

        time.sleep(5)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

# üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
check_autostart()

# üìå –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
start_valentine()

# üìå –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=start_valentine, daemon=True).start()

# close_selected_program()